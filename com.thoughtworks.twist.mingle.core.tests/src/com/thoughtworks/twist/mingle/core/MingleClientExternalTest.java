/******************************************************************************* * Copyright (c) 2008 ThoughtWorks, Inc. and others. * All rights reserved. This program and the accompanying materials * are made available under the terms of the Eclipse Public License v1.0 * which accompanies this distribution, and is available at * http://www.eclipse.org/legal/epl-v10.html *  * Contributors: *     ThoughtWorks, Inc. - initial API and implementation *******************************************************************************/package com.thoughtworks.twist.mingle.core;import junit.framework.TestCase;/** * @author Ketan Padegaonkar */public class MingleClientExternalTest extends TestCase {	private static final String	MINGLE_PASSWORD	= "admin";	private static final String	MINGLE_USER		= "manish";	private static final String	MINGLE_URL		= "http://10.7.3.42:8090/projects/minglyn_test";	public void testValidatesConnectionPasswordIsCorrect() throws Exception {		MingleClient mingleClient = MingleClientFactory.getDefault().createMingleClient(MINGLE_URL, MINGLE_USER, MINGLE_PASSWORD);		assertTrue(mingleClient.validate());	}	public void testThrowsMingleAuthenticationExceptionOnLoginFailure() throws Exception {		MingleClient mingleClient = MingleClientFactory.getDefault().createMingleClient(MINGLE_URL, MINGLE_USER, "invalidPassword");		try {			mingleClient.validate();			fail("expected MingleAuthenticationException, should not have reached here");		} catch (MingleAuthenticationException e) {			// pass		}	}	public void testDoesNotValidateConnectionOnHttpErrors() throws Exception {		MingleClient mingleClient = MingleClientFactory.getDefault().createMingleClient(MINGLE_URL, MINGLE_USER, MINGLE_USER);		try {			assertFalse(mingleClient.validate());			fail("expected IOException, should not have reached here");		} catch (RuntimeException e) {			// pass		}	}	public void testGets25MingleCards() throws Exception {		MingleClient mingleClient = MingleClientFactory.getDefault().createMingleClient(MINGLE_URL, MINGLE_USER, MINGLE_PASSWORD);		TaskDataList allTasks = mingleClient.getAllTaskData();		assertEquals(25, allTasks.size());	}	public void testGetsSingleCard() throws Exception {		MingleClient mingleClient = MingleClientFactory.getDefault().createMingleClient(MINGLE_URL, MINGLE_USER, MINGLE_PASSWORD);		mingleClient.getTaskData("104");	}}